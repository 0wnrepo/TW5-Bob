title: $:/plugins/OokTech/Bob/Changelog

!! Version 1.2.2 Fried Potatoes

  - Wikis can now be hosted on paths to other wikis. You can have both '/students' and '/students/eve'
    - No wikis can have the name `__path`
    - The way that wiki paths are listed has changed, but settings files are updated automatically without needing any manual editing.
  - Lots of small back-end optimisations that hopefully reduce the memory usage.
  - Improvements for reconnecting to and resyncing with a server after being disconnected
  - Added an option to have verbose or compact help and documentation in the control panel.
  - Fix the manual settings losing focus problem
  - Improve the manual settings layout and interface a little
  - Fix some situations where the tiddlywiki/filesystem and tiddlywiki/tiddlyweb were included when they shouldn't be
  - Fix a bug that prevented internal fetch from working with a transform filter (and possibly in other situations)
  - (BobEXE) the Wikis, Plugins, Themes and Editions folders are all now created automatically in a default location in the same folder as the executable.
  - Fixed another bug that would sometimes allow a wiki with the same name as an existing wiki to be created

!! Version 1.2.1 Timey Wimey

I didn't track things here... Something happened I am sure.

!! Version 1.2.0 Wibbly Wobbly

  - Don't sync tiddlers that start with `$:/WikiSettings`
  - General improvements to message handling
  - You can now give a path (absolute or relative) for wikis instead of always
    making wikis in the `./Wikis` folder.
  - Bob can now automatically detect and list any wikis in the wikis folder or
    subfolders
    - Wikis that are listed but don't exist can also optionally be removed.
  - If you are logged in you can set new wikis to be prefixed by your username
    to prevent naming collisions on multi-user systems.(currently only relevant
    with the secure server)
  - You can make new wikis in subfolders by giving a name like
    path/to/wiki/wikiName
  - Fixed a bug that would sometimes prevent changes to the tags field from
    being properly synced.
  - Optionally set the server to automatically unload wikis that have no active
    connections to reduce ram usage (experimental)
  - Automatically close and remove socket objects that are no logner connected
  - If you have authentication only wikis you are authorised to view will be
    listed.

!! Version 1.1.2 Unnamed Pastry

  - The control panel tab has been refactored a bit (few visible changes)
  - Separate the function that lets you determine if a wiki exists or not from
    the load function
    - This lets us list only wikis that actually exist
    - This may let us automatically detect available wikis in the future
  - The available wikis listing now only shows wikis you have permissions to
    view.
  - You can now set the default folder for storing wikis
    - It can be relative to the tiddlywiki folder (or the folder with the
      executable) or an absolute path.
  - You can now automatically detect wikis that are inside your wikis folder
    - This can automatically populate settings.json for you
    - This can also detect wikis that are listed but don't exist and remove
      them from the list.

!! Version 1.1.1 Pretzel Nubs

  - Fixed a bug that would sometimes show shadow tiddlers as being edited after
    the edit was cancelled.
  - Add the start of what is necessary to have access control and
    authentication for Bob wikis without an external server
    - so far it does nothing with out an external server, but the access
      control is now consistent.
  - Bump compatibility to TiddlyWiki 5.1.18
  - Stop using $tw.boot.files
  - Everything that uses the internalFetch mechanism can now accept transform
    filters for fetched tiddlers.
    - This includes `internalFetch`, `buildHTMLWiki` and `newWikiFromTiddlers`

!! Version 1.1.0 Actually Garlic Bagels (still)

- Add `savePluginFolder` web socket message to save packaged plugins as folders
  on a server. These plugins can then be available to other served wikis and in
  the plugin library, if it is enabled.
- Add the `import` borwser message handler to make fetching nicer
- Add options for how to handle conflicts for `internalFetch`
- `internalFetch` now displays a list of imported tiddlers
- Added a way to change which plugins a wiki uses from inside the wiki
  - In the Bob Settings tab there is a Manage Plugins tab
- Added an interface to save plugins to the server and to select which plugins
  from the server should be used in the current wiki
  - It is still very crude and needs work
- Change the internals to make one $tw.Wiki object for each wiki instead of
  having them all in $tw.wiki
  - There are lots of internal changes to make this work
  - $tw.boot.files still uses the prefixed name
- Streamlined and simplified the file system monitor
  - It should now watch new subfolders inside the tiddlers folder
- Environment variables are now set from the plugin, themes, and languages paths
  given in the settings.
  - This is needed by the core to properly list available plugins
  - This means that you can set the location of one folder listing plugins,
    themes and languages in the settings instead of using environment
    variables. At the moment this is limited to one folder.
- The `unloadWiki` message now ensures that the connection to any browsers with
  that wiki open are closed correctly.
- Updates to the `buildHTMLWiki` message
  - You can now pull tiddlers in from any served wiki while making an html
    file. This means you can combine wikis in the output.
  - There is a default filter for excluding plugins like Bob and components
    that are only useful on a server
  - You can add an additional filter to exclude tiddlers from the exported html
    wiki
  - You can disable the default exclude list for more control
- The `$:/config/FileSystemPaths` settings should work now
- Added a check so it shouldn't crash when trying to load a wiki that doesn't
  work
- Fixed bug where the wrong port is listed in the control panel.
- Added download wiki action widget that downloads the current wiki as a single
  html file.
  - By default it removes the Bob plugin and some other plugins that only work
    with a server.
  - It can have an `includeFilter` for tiddlers to include, an `excludeFilter`
    for tiddlers to exclude and a suggested name for the downloaded file.
- Fixed bug where settings file wouldn't be properly created if it didn't exist
- Added an action widget that lets you convert a single file wiki into a wiki
  that can be used by Bob.
- Added interfaces for the importing/creating and exporting/saving wikis to the
  control panel.

!! Version 1.0.6 Salt Bagels 2: Bagel Harder

- Now the server only uses one port for both websockets and http(s) traffic
- Add paths for the plugin library to the normal Bob server

!! Version 1.0.5 Salt Bagles

- Added fetch and push routes to the `ws-server`
  - There are currently only placeholder functions for access control
- Updated external libraries to the newest versions (npm modules `ip`, `ws` and
  `async-limiter`)
  - `ip` is used to get the ip address of the server to make connecting
    multiple computers easier
  - `ws` adds a websocket interface to the server side
  - `async-limiter` is needed by `ws`
  - Now the external libraries correctly use `tiddlywiki.files` files instead
    of the previous fragile hacky way.
- Updated documentation and added a tab in the Bob section of the
  $:/ControlPanel for Bob documentation.
- Bob now prints out the TiddlyWiki and Bob versions being used in the terminal
  when you start the server.
- The Save Wiki button is disabled because it isn't useful (later I may make it
  download a non-bob single file wiki)

!! Version 1.0.4 Sourdough Pizza

- The disconnected message is now much smaller because you can keep working on
  the wiki and reconnect.
- Added the internalFetch message to match the --fetch command in the core.
  - It fetches tiddlers from another wiki on the same Bob server
  - Tiddlers to import are selected by a filter
  - There is an optional transform filter that can modify the imported tiddlers
    titles (you can add prefixes/suffixes, etc.)
  - Conflict resolution uses the same system as resyncing to the server.

!! Version 1.0.3 Sourdough Crumpets

- Fixed/Updated documentation
  - Added note about buildHTMLWiki message
- Fixed a bug that would keep old tiddlers after they were renamed.
  - It also sometimes kept old tiddlers that were deleted and then the wiki was
    reloaded.
- Partially fixed a related bug that would sometimes keep old versions of
  tiddlers if they were renamed on the file system while the wiki is running.
  - This is only partially fixed. The behaviour is inconsistent. I need to find
    reproducible ways to cause it.
- Added the 'unloadWiki' message that unloads a loaded wiki.
  - This can be used to change the plugins loaded in a wiki and to just remove
    wikis from memory if they aren't being used. That second one may not be
    very useful because wikis don't take much memory.
  - There is currently no handling for what happens when you unload a wiki
    while someone is using it. So beware.
- Added a hook to be used by external servers when you create a new wiki
  - This lets you set the correct access permissions on wikis created from
    within tiddlywiki when you are using an external server.
- Added detection and recovery of lost websocket messages to ensure that all
  changes to a wiki are properly saved on the server and that all changes on
  the server make it to all of the browsers.
  - This update also gives much more consistent handling to all messages
  - There is a short delay before sending saveTiddler messages, this prevents a
    bug that would cause errors saving changes to tiddler edited without using
    the normal edit tiddler.
- Only messages for the wiki a connection is using get sent to that connection,
  potentially reducing the network load of a wiki.
  - This also improves security and privacy because people who don't have
    access to a wiki can't see that there is editing activity taking place or
    see tiddler titles.
- On the back-end the waiting list is removed which simplifies a lot
- Hopefully there is correct handling for date fields now.
  - This needs further testing.
- Serve cached wikis if nothing has changed since the last time it was built
- Added includePluginList and excludePluginList to the configuration.
  - `includePluginList` is a list of plugins that should be served to every
    wiki served by Bob, regardless of if they are in the tiddlywiki.info file.
  - `excludePluginList` is a list of plugins that should not be served on any
    wiki served by Bob regardless of if they are listed in the tiddlywiki.info
    file.
  - `excludePluginList` takes precidence over the `includePluginList` so if a
    plugin is listed in both it will not be included. `excludePluginList` can
    also override the `servePlugin` setting if you have that set to true, so it
    can be used to make Bob serve normal tiddlywikis without any multi-user or
    other Bob functionality.
- The default file server url path is now `files` instead of `file` to match
  the proposed updates to the core --listen command.
- The deleteTiddler, editingTiddler and, cancelEditingTiddler messages are now
  consistent with the saveTiddler message.
  - Now removeTiddler is deleteTiddler
- The wiki can now reconnect to a server after being disconnected
- The wiki now keeps track of unsent messages when disconnected from the server
  - The browser sends any unsent changes to the server when it reconnects
  - The changes are also saved in a tiddler that can be exported for future
    manual inclusion
  - The server sends any changes that have happened since the browser was
    disconnected
  - Conflicts need to be taken care of in the browser.
- The connection health is now determined by the socket state in the browser,
  not the time it takes to receive a response to the heartbeat

!! Version 1.0.2 Sourdough Biscuits

- Fixed/Updated documentation
  - for the getSetting macro (fixed typo)
  - for the buildHTMLWiki message (added excludeList info)
  - fixed the message about shutting down the server in the server actions tab
- Fixed a bug where output single file html wikis would always be called
  `index.html`
- Added an optional excludeFilter attribute to the buildHTMLWiki message that
  lists tiddlers that shouldn't be added to the exported wiki.
- Added the option to set the location of editions using the editionsPath
  setting.
  - This shouldn't affect the environment variable method of setting the location.
- Fixed a bug that would let the server try and load a wiki that didn't exist
- Updated instructions to point to TiddlyWiki version 5.1.17

!! Version 1.0.1 Sourdough

- The Bob settings tab only has contents on the root wiki.

!! Changed name to Bob and bumped version to 1.0.0

!! Version 0.1.11

- Improved handling for setting the websockets port number
- Make all wikis use the settings from the root wiki (otherwise all served wikis would have to have the same port and host information set individually)
- The dirty indicator no longer flashes on and off when it doesn't need to. It isn't perfect yet.

!! Initial State

This is working as the initial state

- Two-way real-time syncing between the browser and file system
  - Updates the wiki in the browser immediately when any changes are made to the file system
  - Immediately save changes to tiddlers made in the browser to the file system
  - Syncing can ignore tiddlers based on an editable exclude filter
- Multi-User support
  - Allows any number of people/computers/browser tabs to connect to the wiki
    server and use or edit the same wiki(s) simultaneously.
  - Prevents multiple people from editing the same tiddler at the same time by
    disabling the edit button for tiddlers currently being edited
- Multi-Wiki support, the plugin can serve multiple wikis at once, each served
  wiki has all the features listed here.
- Websockets!! (used on the back-end, can be used by other plugins in the
  future)
  - Adds a websocket interface to tiddlywiki (currently only used by this
    plugin, a git plugin is currently being developed as well as plugins to run
    scripts on the local computer from tiddlywiki)
  - Adds an action widget that allows you to send arbitrary websocket messages
    to the server. This can be used to do things like trigger shell scripts
    from inside the wiki.
- Adds a new command `wsserver` that starts up a minimal http and websocket
  server used for the real-time communication between the browser and server.
- Adds a new command `externalserver` which starts up the wiki without a server
  so that you can use an external server, like an expressjs server.
- Allows you to reset the tiddlywiki server from the browser using a websocket
  message.
- Lets you run shell scripts from inside the wiki
- Everything is configurable from inside the wiki
- Your connection to the server is monitored and you are warned if there is a
  problem
- Serve files from the local file system (like images) so that they can be
  used in the wiki.
- Build a single file version of any served wikis from within the wiki.
- Websocket messages send a token from localstorage if one exists for authentication.
